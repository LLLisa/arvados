{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://api.arvados.org/auth/arvados": {
          "description": "View and manage objects"
        },
        "https://api.arvados.org/auth/arvados.readonly": {
          "description": "View objects"
        }
      }
    }
  },
  "basePath": "/arvados/v1/",
  "batchPath": "batch",
  "description": "The API to interact with Arvados.",
  "discoveryVersion": "v1",
  "documentationLink": "http://doc.arvados.org/api/index.html",
  "id": "arvados:v1",
  "kind": "discovery#restDescription",
  "name": "arvados",
  "parameters": {
    "alt": {
      "type": "string",
      "description": "Data format for the response.",
      "default": "json",
      "enum": [
        "json"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json"
      ],
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    }
  },
  "protocol": "rest",
  "resources": {
    "api_client_authorizations": {
      "methods": {
        "get": {
          "id": "arvados.api_client_authorizations.get",
          "path": "api_client_authorizations/{uuid}",
          "httpMethod": "GET",
          "description": "Gets a ApiClientAuthorization's metadata by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the ApiClientAuthorization to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "ApiClientAuthorization"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.api_client_authorizations.list",
          "path": "api_client_authorizations",
          "httpMethod": "GET",
          "description": "Retrieve a ApiClientAuthorizationList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n    * `\"exact\"`: The response will include an `items_available` field that\n      counts the number of objects that matched this search criteria,\n      including ones not included in `items`.\n\n    * `\"none\"`: The response will not include an `items_avaliable`\n      field. This improves performance by returning a result as soon as enough\n      `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "ApiClientAuthorizationList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.api_client_authorizations.create",
          "path": "api_client_authorizations",
          "httpMethod": "POST",
          "description": "Create a new ApiClientAuthorization.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "api_client_authorization": {
                "$ref": "ApiClientAuthorization"
              }
            }
          },
          "response": {
            "$ref": "ApiClientAuthorization"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.api_client_authorizations.update",
          "path": "api_client_authorizations/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing ApiClientAuthorization.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the ApiClientAuthorization to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "api_client_authorization": {
                "$ref": "ApiClientAuthorization"
              }
            }
          },
          "response": {
            "$ref": "ApiClientAuthorization"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.api_client_authorizations.delete",
          "path": "api_client_authorizations/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing ApiClientAuthorization.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the ApiClientAuthorization to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "ApiClientAuthorization"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "create_system_auth": {
          "id": "arvados.api_client_authorizations.create_system_auth",
          "path": "api_client_authorizations/create_system_auth",
          "httpMethod": "POST",
          "description": "Create a token for the system (\"root\") user.",
          "parameters": {
            "scopes": {
              "type": "array",
              "required": false,
              "default": "[\"all\"]",
              "description": "An array of strings defining the scope of resources this token will be allowed to access. Refer to the [scopes reference][] for details.\n\n[scopes reference]: https://doc.arvados.org/api/tokens.html#scopes\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "ApiClientAuthorization"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "current": {
          "id": "arvados.api_client_authorizations.current",
          "path": "api_client_authorizations/current",
          "httpMethod": "GET",
          "description": "Return all metadata for the token used to authorize this request.",
          "parameters": {},
          "response": {
            "$ref": "ApiClientAuthorization"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "authorized_keys": {
      "methods": {
        "get": {
          "id": "arvados.authorized_keys.get",
          "path": "authorized_keys/{uuid}",
          "httpMethod": "GET",
          "description": "Gets a AuthorizedKey's metadata by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the AuthorizedKey to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "AuthorizedKey"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.authorized_keys.list",
          "path": "authorized_keys",
          "httpMethod": "GET",
          "description": "Retrieve a AuthorizedKeyList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n    * `\"exact\"`: The response will include an `items_available` field that\n      counts the number of objects that matched this search criteria,\n      including ones not included in `items`.\n\n    * `\"none\"`: The response will not include an `items_avaliable`\n      field. This improves performance by returning a result as soon as enough\n      `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "AuthorizedKeyList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.authorized_keys.create",
          "path": "authorized_keys",
          "httpMethod": "POST",
          "description": "Create a new AuthorizedKey.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "authorized_key": {
                "$ref": "AuthorizedKey"
              }
            }
          },
          "response": {
            "$ref": "AuthorizedKey"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.authorized_keys.update",
          "path": "authorized_keys/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing AuthorizedKey.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the AuthorizedKey to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "authorized_key": {
                "$ref": "AuthorizedKey"
              }
            }
          },
          "response": {
            "$ref": "AuthorizedKey"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.authorized_keys.delete",
          "path": "authorized_keys/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing AuthorizedKey.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the AuthorizedKey to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "AuthorizedKey"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "collections": {
      "methods": {
        "get": {
          "id": "arvados.collections.get",
          "path": "collections/{uuid}",
          "httpMethod": "GET",
          "description": "Gets a Collection's metadata by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Collection to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "include_trash": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "Show collection even if its `is_trashed` attribute is true.",
              "location": "query"
            },
            "include_old_versions": {
              "type": "boolean",
              "required": false,
              "default": "true",
              "description": "Include past collection versions.",
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "Collection"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.collections.list",
          "path": "collections",
          "httpMethod": "GET",
          "description": "Retrieve a CollectionList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n    * `\"exact\"`: The response will include an `items_available` field that\n      counts the number of objects that matched this search criteria,\n      including ones not included in `items`.\n\n    * `\"none\"`: The response will not include an `items_avaliable`\n      field. This improves performance by returning a result as soon as enough\n      `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            },
            "include_trash": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "Include collections whose `is_trashed` attribute is true.",
              "location": "query"
            },
            "include_old_versions": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "Include past collection versions.",
              "location": "query"
            }
          },
          "response": {
            "$ref": "CollectionList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.collections.create",
          "path": "collections",
          "httpMethod": "POST",
          "description": "Create a new Collection.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            },
            "replace_files": {
              "type": "object",
              "description": "Files and directories to initialize/replace with content from other collections.",
              "required": false,
              "location": "query",
              "properties": {},
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "request": {
            "required": true,
            "properties": {
              "collection": {
                "$ref": "Collection"
              }
            }
          },
          "response": {
            "$ref": "Collection"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.collections.update",
          "path": "collections/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing Collection.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Collection to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "replace_files": {
              "type": "object",
              "description": "Files and directories to initialize/replace with content from other collections.",
              "required": false,
              "location": "query",
              "properties": {},
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "request": {
            "required": true,
            "properties": {
              "collection": {
                "$ref": "Collection"
              }
            }
          },
          "response": {
            "$ref": "Collection"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.collections.delete",
          "path": "collections/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing Collection.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Collection to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Collection"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "provenance": {
          "id": "arvados.collections.provenance",
          "path": "collections/{uuid}/provenance",
          "httpMethod": "GET",
          "description": "Detail the provenance of a given collection.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Collection to query.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Collection"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "used_by": {
          "id": "arvados.collections.used_by",
          "path": "collections/{uuid}/used_by",
          "httpMethod": "GET",
          "description": "Detail where a given collection has been used.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Collection to query.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Collection"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "trash": {
          "id": "arvados.collections.trash",
          "path": "collections/{uuid}/trash",
          "httpMethod": "POST",
          "description": "Trash a collection.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Collection to update.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Collection"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "untrash": {
          "id": "arvados.collections.untrash",
          "path": "collections/{uuid}/untrash",
          "httpMethod": "POST",
          "description": "Untrash a collection.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Collection to update.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Collection"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "computed_permissions": {
      "methods": {
        "list": {
          "id": "arvados.computed_permissions.list",
          "path": "computed_permissions",
          "httpMethod": "GET",
          "description": "Retrieve a ComputedPermissionList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n    * `\"exact\"`: The response will include an `items_available` field that\n      counts the number of objects that matched this search criteria,\n      including ones not included in `items`.\n\n    * `\"none\"`: The response will not include an `items_avaliable`\n      field. This improves performance by returning a result as soon as enough\n      `items` have been loaded for this result.\n\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "ComputedPermissionList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        }
      }
    },
    "containers": {
      "methods": {
        "get": {
          "id": "arvados.containers.get",
          "path": "containers/{uuid}",
          "httpMethod": "GET",
          "description": "Gets a Container's metadata by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Container to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "Container"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.containers.list",
          "path": "containers",
          "httpMethod": "GET",
          "description": "Retrieve a ContainerList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n    * `\"exact\"`: The response will include an `items_available` field that\n      counts the number of objects that matched this search criteria,\n      including ones not included in `items`.\n\n    * `\"none\"`: The response will not include an `items_avaliable`\n      field. This improves performance by returning a result as soon as enough\n      `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "ContainerList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.containers.create",
          "path": "containers",
          "httpMethod": "POST",
          "description": "Create a new Container.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "container": {
                "$ref": "Container"
              }
            }
          },
          "response": {
            "$ref": "Container"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.containers.update",
          "path": "containers/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing Container.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Container to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "container": {
                "$ref": "Container"
              }
            }
          },
          "response": {
            "$ref": "Container"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.containers.delete",
          "path": "containers/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing Container.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Container to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Container"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "auth": {
          "id": "arvados.containers.auth",
          "path": "containers/{uuid}/auth",
          "httpMethod": "GET",
          "description": "Get the API client authorization token associated with this container.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Container to query.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Container"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "lock": {
          "id": "arvados.containers.lock",
          "path": "containers/{uuid}/lock",
          "httpMethod": "POST",
          "description": "Lock a container (for a dispatcher to begin running it).",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Container to update.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Container"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "unlock": {
          "id": "arvados.containers.unlock",
          "path": "containers/{uuid}/unlock",
          "httpMethod": "POST",
          "description": "Unlock a container (for a dispatcher to stop running it).",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Container to update.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Container"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update_priority": {
          "id": "arvados.containers.update_priority",
          "path": "containers/{uuid}/update_priority",
          "httpMethod": "POST",
          "description": "Recalculate and return the priority of a given container.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Container to update.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Container"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "secret_mounts": {
          "id": "arvados.containers.secret_mounts",
          "path": "containers/{uuid}/secret_mounts",
          "httpMethod": "GET",
          "description": "Return secret mount information for the container associated with the API token authorizing this request.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Container to query.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Container"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "current": {
          "id": "arvados.containers.current",
          "path": "containers/current",
          "httpMethod": "GET",
          "description": "Return the container record associated with the API token authorizing this request.",
          "parameters": {},
          "response": {
            "$ref": "Container"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "container_requests": {
      "methods": {
        "get": {
          "id": "arvados.container_requests.get",
          "path": "container_requests/{uuid}",
          "httpMethod": "GET",
          "description": "Gets a ContainerRequest's metadata by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the ContainerRequest to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "include_trash": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "Show container request even if its owner project is trashed.",
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "ContainerRequest"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.container_requests.list",
          "path": "container_requests",
          "httpMethod": "GET",
          "description": "Retrieve a ContainerRequestList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n    * `\"exact\"`: The response will include an `items_available` field that\n      counts the number of objects that matched this search criteria,\n      including ones not included in `items`.\n\n    * `\"none\"`: The response will not include an `items_avaliable`\n      field. This improves performance by returning a result as soon as enough\n      `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            },
            "include_trash": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "Include container requests whose owner project is trashed.",
              "location": "query"
            }
          },
          "response": {
            "$ref": "ContainerRequestList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.container_requests.create",
          "path": "container_requests",
          "httpMethod": "POST",
          "description": "Create a new ContainerRequest.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "container_request": {
                "$ref": "ContainerRequest"
              }
            }
          },
          "response": {
            "$ref": "ContainerRequest"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.container_requests.update",
          "path": "container_requests/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing ContainerRequest.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the ContainerRequest to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "container_request": {
                "$ref": "ContainerRequest"
              }
            }
          },
          "response": {
            "$ref": "ContainerRequest"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.container_requests.delete",
          "path": "container_requests/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing ContainerRequest.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the ContainerRequest to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "ContainerRequest"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "container_status": {
          "id": "arvados.container_requests.container_status",
          "path": "container_requests/{uuid}/container_status",
          "httpMethod": "GET",
          "description": "Return scheduling details for a container request.",
          "parameters": {
            "uuid": {
              "type": "string",
              "required": true,
              "description": "The UUID of the container request to query.",
              "location": "query"
            }
          },
          "response": {
            "$ref": "ContainerRequest"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "groups": {
      "methods": {
        "get": {
          "id": "arvados.groups.get",
          "path": "groups/{uuid}",
          "httpMethod": "GET",
          "description": "Gets a Group's metadata by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Group to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "include_trash": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "Return group/project even if its `is_trashed` attribute is true.",
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "Group"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.groups.list",
          "path": "groups",
          "httpMethod": "GET",
          "description": "Retrieve a GroupList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n    * `\"exact\"`: The response will include an `items_available` field that\n      counts the number of objects that matched this search criteria,\n      including ones not included in `items`.\n\n    * `\"none\"`: The response will not include an `items_avaliable`\n      field. This improves performance by returning a result as soon as enough\n      `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            },
            "include_trash": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "Include items whose `is_trashed` attribute is true.",
              "location": "query"
            }
          },
          "response": {
            "$ref": "GroupList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.groups.create",
          "path": "groups",
          "httpMethod": "POST",
          "description": "Create a new Group.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            },
            "async": {
              "required": false,
              "type": "boolean",
              "location": "query",
              "default": "false",
              "description": "If true, cluster permission will not be updated immediately, but instead at the next configured update interval."
            }
          },
          "request": {
            "required": true,
            "properties": {
              "group": {
                "$ref": "Group"
              }
            }
          },
          "response": {
            "$ref": "Group"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.groups.update",
          "path": "groups/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing Group.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Group to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "async": {
              "required": false,
              "type": "boolean",
              "location": "query",
              "default": "false",
              "description": "If true, cluster permission will not be updated immediately, but instead at the next configured update interval."
            }
          },
          "request": {
            "required": true,
            "properties": {
              "group": {
                "$ref": "Group"
              }
            }
          },
          "response": {
            "$ref": "Group"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.groups.delete",
          "path": "groups/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing Group.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Group to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Group"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "contents": {
          "id": "arvados.groups.contents",
          "path": "groups/contents",
          "httpMethod": "GET",
          "description": "List objects that belong to a group.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n    * `\"exact\"`: The response will include an `items_available` field that\n      counts the number of objects that matched this search criteria,\n      including ones not included in `items`.\n\n    * `\"none\"`: The response will not include an `items_avaliable`\n      field. This improves performance by returning a result as soon as enough\n      `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            },
            "include_trash": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "Include items whose `is_trashed` attribute is true.",
              "location": "query"
            },
            "uuid": {
              "type": "string",
              "required": false,
              "default": "",
              "description": "The UUID of the user or group to list owned objects.",
              "location": "query"
            },
            "recursive": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "Include contents from child groups recursively.",
              "location": "query"
            },
            "include": {
              "type": "array",
              "required": false,
              "description": "An array of referenced objects to include in the `included` field of the response. Supported values in the array are:\n\n  * `\"container_uuid\"`\n  * `\"owner_uuid\"`\n\n",
              "location": "query"
            },
            "include_old_versions": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, include past versions of collections in the listing.",
              "location": "query"
            }
          },
          "response": {
            "$ref": "Group"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "shared": {
          "id": "arvados.groups.shared",
          "path": "groups/shared",
          "httpMethod": "GET",
          "description": "List groups that the current user can access via permission links.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n    * `\"exact\"`: The response will include an `items_available` field that\n      counts the number of objects that matched this search criteria,\n      including ones not included in `items`.\n\n    * `\"none\"`: The response will not include an `items_avaliable`\n      field. This improves performance by returning a result as soon as enough\n      `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            },
            "include_trash": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "Include items whose `is_trashed` attribute is true.",
              "location": "query"
            },
            "include": {
              "type": "string",
              "required": false,
              "description": "A string naming referenced objects to include in the `included` field of the response. Supported values are:\n\n  * `\"owner_uuid\"`\n\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "Group"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "trash": {
          "id": "arvados.groups.trash",
          "path": "groups/{uuid}/trash",
          "httpMethod": "POST",
          "description": "Trash a group.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Group to update.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Group"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "untrash": {
          "id": "arvados.groups.untrash",
          "path": "groups/{uuid}/untrash",
          "httpMethod": "POST",
          "description": "Untrash a group.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Group to update.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Group"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "keep_services": {
      "methods": {
        "get": {
          "id": "arvados.keep_services.get",
          "path": "keep_services/{uuid}",
          "httpMethod": "GET",
          "description": "Gets a KeepService's metadata by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the KeepService to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "KeepService"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.keep_services.list",
          "path": "keep_services",
          "httpMethod": "GET",
          "description": "Retrieve a KeepServiceList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n    * `\"exact\"`: The response will include an `items_available` field that\n      counts the number of objects that matched this search criteria,\n      including ones not included in `items`.\n\n    * `\"none\"`: The response will not include an `items_avaliable`\n      field. This improves performance by returning a result as soon as enough\n      `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "KeepServiceList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.keep_services.create",
          "path": "keep_services",
          "httpMethod": "POST",
          "description": "Create a new KeepService.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "keep_service": {
                "$ref": "KeepService"
              }
            }
          },
          "response": {
            "$ref": "KeepService"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.keep_services.update",
          "path": "keep_services/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing KeepService.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the KeepService to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "keep_service": {
                "$ref": "KeepService"
              }
            }
          },
          "response": {
            "$ref": "KeepService"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.keep_services.delete",
          "path": "keep_services/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing KeepService.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the KeepService to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "KeepService"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "accessible": {
          "id": "arvados.keep_services.accessible",
          "path": "keep_services/accessible",
          "httpMethod": "GET",
          "description": "List Keep services that the current client can access.",
          "parameters": {},
          "response": {
            "$ref": "KeepService"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "links": {
      "methods": {
        "get": {
          "id": "arvados.links.get",
          "path": "links/{uuid}",
          "httpMethod": "GET",
          "description": "Gets a Link's metadata by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Link to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "Link"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.links.list",
          "path": "links",
          "httpMethod": "GET",
          "description": "Retrieve a LinkList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n    * `\"exact\"`: The response will include an `items_available` field that\n      counts the number of objects that matched this search criteria,\n      including ones not included in `items`.\n\n    * `\"none\"`: The response will not include an `items_avaliable`\n      field. This improves performance by returning a result as soon as enough\n      `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "LinkList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.links.create",
          "path": "links",
          "httpMethod": "POST",
          "description": "Create a new Link.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "link": {
                "$ref": "Link"
              }
            }
          },
          "response": {
            "$ref": "Link"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.links.update",
          "path": "links/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing Link.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Link to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "link": {
                "$ref": "Link"
              }
            }
          },
          "response": {
            "$ref": "Link"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.links.delete",
          "path": "links/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing Link.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Link to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Link"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "get_permissions": {
          "id": "arvados.links.get_permissions",
          "path": "permissions/{uuid}",
          "httpMethod": "GET",
          "description": "List permissions granted on an Arvados object.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Link to query.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Link"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "logs": {
      "methods": {
        "get": {
          "id": "arvados.logs.get",
          "path": "logs/{uuid}",
          "httpMethod": "GET",
          "description": "Gets a Log's metadata by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Log to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "Log"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.logs.list",
          "path": "logs",
          "httpMethod": "GET",
          "description": "Retrieve a LogList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n    * `\"exact\"`: The response will include an `items_available` field that\n      counts the number of objects that matched this search criteria,\n      including ones not included in `items`.\n\n    * `\"none\"`: The response will not include an `items_avaliable`\n      field. This improves performance by returning a result as soon as enough\n      `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "LogList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.logs.create",
          "path": "logs",
          "httpMethod": "POST",
          "description": "Create a new Log.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "log": {
                "$ref": "Log"
              }
            }
          },
          "response": {
            "$ref": "Log"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.logs.update",
          "path": "logs/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing Log.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Log to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "log": {
                "$ref": "Log"
              }
            }
          },
          "response": {
            "$ref": "Log"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.logs.delete",
          "path": "logs/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing Log.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Log to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Log"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "users": {
      "methods": {
        "get": {
          "id": "arvados.users.get",
          "path": "users/{uuid}",
          "httpMethod": "GET",
          "description": "Gets a User's metadata by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the User to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "User"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.users.list",
          "path": "users",
          "httpMethod": "GET",
          "description": "Retrieve a UserList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n    * `\"exact\"`: The response will include an `items_available` field that\n      counts the number of objects that matched this search criteria,\n      including ones not included in `items`.\n\n    * `\"none\"`: The response will not include an `items_avaliable`\n      field. This improves performance by returning a result as soon as enough\n      `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "UserList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.users.create",
          "path": "users",
          "httpMethod": "POST",
          "description": "Create a new User.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "user": {
                "$ref": "User"
              }
            }
          },
          "response": {
            "$ref": "User"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.users.update",
          "path": "users/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing User.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the User to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not try to update the user on any other clusters in the federation,\nonly the cluster that received the request.\nYou must be an administrator to use this flag.",
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "user": {
                "$ref": "User"
              }
            }
          },
          "response": {
            "$ref": "User"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.users.delete",
          "path": "users/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing User.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the User to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "User"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "current": {
          "id": "arvados.users.current",
          "path": "users/current",
          "httpMethod": "GET",
          "description": "Return the user record associated with the API token authorizing this request.",
          "parameters": {},
          "response": {
            "$ref": "User"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "system": {
          "id": "arvados.users.system",
          "path": "users/system",
          "httpMethod": "GET",
          "description": "Return this cluster's system (\"root\") user record.",
          "parameters": {},
          "response": {
            "$ref": "User"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "activate": {
          "id": "arvados.users.activate",
          "path": "users/{uuid}/activate",
          "httpMethod": "POST",
          "description": "Set the `is_active` flag on a user record.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the User to update.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "User"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "setup": {
          "id": "arvados.users.setup",
          "path": "users/setup",
          "httpMethod": "POST",
          "description": "Convenience method to \"fully\" set up a user record with a virtual machine login and notification email.",
          "parameters": {
            "uuid": {
              "type": "string",
              "required": false,
              "description": "UUID of an existing user record to set up.",
              "location": "query"
            },
            "user": {
              "type": "object",
              "required": false,
              "description": "Attributes of a new user record to set up.",
              "location": "query"
            },
            "repo_name": {
              "type": "string",
              "required": false,
              "description": "This parameter is obsolete and ignored.",
              "location": "query"
            },
            "vm_uuid": {
              "type": "string",
              "required": false,
              "description": "If given, setup creates a login link to allow this user to access the Arvados virtual machine with this UUID.",
              "location": "query"
            },
            "send_notification_email": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, send an email to the user notifying them they can now access this Arvados cluster.",
              "location": "query"
            }
          },
          "response": {
            "$ref": "User"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "unsetup": {
          "id": "arvados.users.unsetup",
          "path": "users/{uuid}/unsetup",
          "httpMethod": "POST",
          "description": "Unset a user's active flag and delete associated records.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the User to update.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "User"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "merge": {
          "id": "arvados.users.merge",
          "path": "users/merge",
          "httpMethod": "POST",
          "description": "Transfer ownership of one user's data to another.",
          "parameters": {
            "new_owner_uuid": {
              "type": "string",
              "required": true,
              "description": "UUID of the user or group that will take ownership of data owned by the old user.",
              "location": "query"
            },
            "new_user_token": {
              "type": "string",
              "required": false,
              "description": "Valid API token for the user receiving ownership. If you use this option, it takes ownership of data owned by the user making the request.",
              "location": "query"
            },
            "redirect_to_new_user": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, authorization attempts for the old user will be redirected to the new user.",
              "location": "query"
            },
            "old_user_uuid": {
              "type": "string",
              "required": false,
              "description": "UUID of the user whose ownership is being transferred to `new_owner_uuid`. You must be an admin to use this option.",
              "location": "query"
            },
            "new_user_uuid": {
              "type": "string",
              "required": false,
              "description": "UUID of the user receiving ownership. You must be an admin to use this option.",
              "location": "query"
            }
          },
          "response": {
            "$ref": "User"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "user_agreements": {
      "methods": {
        "get": {
          "id": "arvados.user_agreements.get",
          "path": "user_agreements/{uuid}",
          "httpMethod": "GET",
          "description": "Gets a UserAgreement's metadata by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the UserAgreement to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "UserAgreement"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.user_agreements.list",
          "path": "user_agreements",
          "httpMethod": "GET",
          "description": "Retrieve a UserAgreementList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n    * `\"exact\"`: The response will include an `items_available` field that\n      counts the number of objects that matched this search criteria,\n      including ones not included in `items`.\n\n    * `\"none\"`: The response will not include an `items_avaliable`\n      field. This improves performance by returning a result as soon as enough\n      `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "UserAgreementList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.user_agreements.create",
          "path": "user_agreements",
          "httpMethod": "POST",
          "description": "Create a new UserAgreement.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "user_agreement": {
                "$ref": "UserAgreement"
              }
            }
          },
          "response": {
            "$ref": "UserAgreement"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.user_agreements.update",
          "path": "user_agreements/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing UserAgreement.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the UserAgreement to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "user_agreement": {
                "$ref": "UserAgreement"
              }
            }
          },
          "response": {
            "$ref": "UserAgreement"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.user_agreements.delete",
          "path": "user_agreements/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing UserAgreement.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the UserAgreement to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "UserAgreement"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "signatures": {
          "id": "arvados.user_agreements.signatures",
          "path": "user_agreements/signatures",
          "httpMethod": "GET",
          "description": "List all user agreement signature links from a user.",
          "parameters": {},
          "response": {
            "$ref": "UserAgreement"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "sign": {
          "id": "arvados.user_agreements.sign",
          "path": "user_agreements/sign",
          "httpMethod": "POST",
          "description": "Create a signature link from the current user for a given user agreement.",
          "parameters": {},
          "response": {
            "$ref": "UserAgreement"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "virtual_machines": {
      "methods": {
        "get": {
          "id": "arvados.virtual_machines.get",
          "path": "virtual_machines/{uuid}",
          "httpMethod": "GET",
          "description": "Gets a VirtualMachine's metadata by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the VirtualMachine to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "VirtualMachine"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.virtual_machines.list",
          "path": "virtual_machines",
          "httpMethod": "GET",
          "description": "Retrieve a VirtualMachineList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n    * `\"exact\"`: The response will include an `items_available` field that\n      counts the number of objects that matched this search criteria,\n      including ones not included in `items`.\n\n    * `\"none\"`: The response will not include an `items_avaliable`\n      field. This improves performance by returning a result as soon as enough\n      `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "VirtualMachineList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.virtual_machines.create",
          "path": "virtual_machines",
          "httpMethod": "POST",
          "description": "Create a new VirtualMachine.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "virtual_machine": {
                "$ref": "VirtualMachine"
              }
            }
          },
          "response": {
            "$ref": "VirtualMachine"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.virtual_machines.update",
          "path": "virtual_machines/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing VirtualMachine.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the VirtualMachine to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "virtual_machine": {
                "$ref": "VirtualMachine"
              }
            }
          },
          "response": {
            "$ref": "VirtualMachine"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.virtual_machines.delete",
          "path": "virtual_machines/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing VirtualMachine.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the VirtualMachine to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "VirtualMachine"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "logins": {
          "id": "arvados.virtual_machines.logins",
          "path": "virtual_machines/{uuid}/logins",
          "httpMethod": "GET",
          "description": "List login permission links for a given virtual machine.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the VirtualMachine to query.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "VirtualMachine"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "get_all_logins": {
          "id": "arvados.virtual_machines.get_all_logins",
          "path": "virtual_machines/get_all_logins",
          "httpMethod": "GET",
          "description": "List login permission links for all virtual machines.",
          "parameters": {},
          "response": {
            "$ref": "VirtualMachine"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "workflows": {
      "methods": {
        "get": {
          "id": "arvados.workflows.get",
          "path": "workflows/{uuid}",
          "httpMethod": "GET",
          "description": "Gets a Workflow's metadata by UUID.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Workflow to return.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "parameterOrder": [
            "uuid"
          ],
          "response": {
            "$ref": "Workflow"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "list": {
          "id": "arvados.workflows.list",
          "path": "workflows",
          "httpMethod": "GET",
          "description": "Retrieve a WorkflowList.",
          "parameters": {
            "filters": {
              "type": "array",
              "required": false,
              "description": "Filters to limit which objects are returned by their attributes.\nRefer to the [filters reference][] for more information about how to write filters.\n\n[filters reference]: https://doc.arvados.org/api/methods.html#filters\n",
              "location": "query"
            },
            "where": {
              "type": "object",
              "required": false,
              "description": "An object to limit which objects are returned by their attributes.\nThe keys of this object are attribute names.\nEach value is either a single matching value or an array of matching values for that attribute.\nThe `filters` parameter is more flexible and preferred.\n",
              "location": "query"
            },
            "order": {
              "type": "array",
              "required": false,
              "description": "An array of strings to set the order in which matching objects are returned.\nEach string has the format `<ATTRIBUTE> <DIRECTION>`.\n`DIRECTION` can be `asc` or omitted for ascending, or `desc` for descending.\n",
              "location": "query"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return from each matching object.",
              "required": false,
              "location": "query"
            },
            "distinct": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If this is true, and multiple objects have the same values\nfor the attributes that you specify in the `select` parameter, then each unique\nset of values will only be returned once in the result set.\n",
              "location": "query"
            },
            "limit": {
              "type": "integer",
              "required": false,
              "default": "100",
              "description": "The maximum number of objects to return in the result.\nNote that the API may return fewer results than this if your request hits other\nlimits set by the administrator.\n",
              "location": "query"
            },
            "offset": {
              "type": "integer",
              "required": false,
              "default": "0",
              "description": "Return matching objects starting from this index.\nNote that result indexes may change if objects are modified in between a series\nof list calls.\n",
              "location": "query"
            },
            "count": {
              "type": "string",
              "required": false,
              "default": "exact",
              "description": "A string to determine result counting behavior. Supported values are:\n\n    * `\"exact\"`: The response will include an `items_available` field that\n      counts the number of objects that matched this search criteria,\n      including ones not included in `items`.\n\n    * `\"none\"`: The response will not include an `items_avaliable`\n      field. This improves performance by returning a result as soon as enough\n      `items` have been loaded for this result.\n\n",
              "location": "query"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster to return objects from",
              "location": "query",
              "required": false
            },
            "bypass_federation": {
              "type": "boolean",
              "required": false,
              "default": "false",
              "description": "If true, do not return results from other clusters in the\nfederation, only the cluster that received the request.\nYou must be an administrator to use this flag.\n",
              "location": "query"
            }
          },
          "response": {
            "$ref": "WorkflowList"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        },
        "create": {
          "id": "arvados.workflows.create",
          "path": "workflows",
          "httpMethod": "POST",
          "description": "Create a new Workflow.",
          "parameters": {
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            },
            "ensure_unique_name": {
              "type": "boolean",
              "description": "If the given name is already used by this owner, adjust the name to ensure uniqueness instead of returning an error.",
              "location": "query",
              "required": false,
              "default": "false"
            },
            "cluster_id": {
              "type": "string",
              "description": "Cluster ID of a federated cluster where this object should be created.",
              "location": "query",
              "required": false
            }
          },
          "request": {
            "required": true,
            "properties": {
              "workflow": {
                "$ref": "Workflow"
              }
            }
          },
          "response": {
            "$ref": "Workflow"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "update": {
          "id": "arvados.workflows.update",
          "path": "workflows/{uuid}",
          "httpMethod": "PUT",
          "description": "Update attributes of an existing Workflow.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Workflow to update.",
              "required": true,
              "location": "path"
            },
            "select": {
              "type": "array",
              "description": "An array of names of attributes to return in the response.",
              "required": false,
              "location": "query"
            }
          },
          "request": {
            "required": true,
            "properties": {
              "workflow": {
                "$ref": "Workflow"
              }
            }
          },
          "response": {
            "$ref": "Workflow"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        },
        "delete": {
          "id": "arvados.workflows.delete",
          "path": "workflows/{uuid}",
          "httpMethod": "DELETE",
          "description": "Delete an existing Workflow.",
          "parameters": {
            "uuid": {
              "type": "string",
              "description": "The UUID of the Workflow to delete.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Workflow"
          },
          "scopes": [
            "https://api.arvados.org/auth/arvados"
          ]
        }
      }
    },
    "configs": {
      "methods": {
        "get": {
          "id": "arvados.configs.get",
          "path": "config",
          "httpMethod": "GET",
          "description": "Get public config",
          "parameters": {},
          "parameterOrder": [],
          "response": {},
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        }
      }
    },
    "vocabularies": {
      "methods": {
        "get": {
          "id": "arvados.vocabularies.get",
          "path": "vocabulary",
          "httpMethod": "GET",
          "description": "Get vocabulary definition",
          "parameters": {},
          "parameterOrder": [],
          "response": {},
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        }
      }
    },
    "sys": {
      "methods": {
        "get": {
          "id": "arvados.sys.trash_sweep",
          "path": "sys/trash_sweep",
          "httpMethod": "POST",
          "description": "apply scheduled trash and delete operations",
          "parameters": {},
          "parameterOrder": [],
          "response": {},
          "scopes": [
            "https://api.arvados.org/auth/arvados",
            "https://api.arvados.org/auth/arvados.readonly"
          ]
        }
      }
    }
  },
  "revision": "20240627",
  "schemas": {
    "ApiClientAuthorizationList": {
      "id": "ApiClientAuthorizationList",
      "description": "A list of ApiClientAuthorization objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#apiClientAuthorizationList.",
          "default": "arvados#apiClientAuthorizationList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching ApiClientAuthorization objects.",
          "items": {
            "$ref": "ApiClientAuthorization"
          }
        },
        "next_link": {
          "type": "string",
          "description": "A link to the next page of ApiClientAuthorizations."
        },
        "next_page_token": {
          "type": "string",
          "description": "The page token for the next page of ApiClientAuthorizations."
        },
        "selfLink": {
          "type": "string",
          "description": "A link back to this list."
        }
      }
    },
    "ApiClientAuthorization": {
      "id": "ApiClientAuthorization",
      "description": "Arvados Api client authorization.",
      "type": "object",
      "uuidPrefix": "gj3su",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "api_token": {
          "type": "string"
        },
        "created_by_ip_address": {
          "type": "string"
        },
        "last_used_by_ip_address": {
          "type": "string"
        },
        "last_used_at": {
          "type": "datetime"
        },
        "expires_at": {
          "type": "datetime"
        },
        "created_at": {
          "type": "datetime"
        },
        "scopes": {
          "type": "Array"
        },
        "uuid": {
          "type": "string",
          "description": "This object's Arvados UUID, like `zzzzz-gj3su-12345abcde67890`."
        }
      }
    },
    "AuthorizedKeyList": {
      "id": "AuthorizedKeyList",
      "description": "A list of AuthorizedKey objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#authorizedKeyList.",
          "default": "arvados#authorizedKeyList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching AuthorizedKey objects.",
          "items": {
            "$ref": "AuthorizedKey"
          }
        },
        "next_link": {
          "type": "string",
          "description": "A link to the next page of AuthorizedKeys."
        },
        "next_page_token": {
          "type": "string",
          "description": "The page token for the next page of AuthorizedKeys."
        },
        "selfLink": {
          "type": "string",
          "description": "A link back to this list."
        }
      }
    },
    "AuthorizedKey": {
      "id": "AuthorizedKey",
      "description": "Arvados Authorized key.",
      "type": "object",
      "uuidPrefix": "fngyi",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "uuid": {
          "type": "string",
          "description": "This object's Arvados UUID, like `zzzzz-fngyi-12345abcde67890`."
        },
        "owner_uuid": {
          "type": "string"
        },
        "modified_by_user_uuid": {
          "type": "string"
        },
        "modified_at": {
          "type": "datetime"
        },
        "name": {
          "type": "string"
        },
        "key_type": {
          "type": "string"
        },
        "authorized_user_uuid": {
          "type": "string"
        },
        "public_key": {
          "type": "text"
        },
        "expires_at": {
          "type": "datetime"
        },
        "created_at": {
          "type": "datetime"
        }
      }
    },
    "CollectionList": {
      "id": "CollectionList",
      "description": "A list of Collection objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#collectionList.",
          "default": "arvados#collectionList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching Collection objects.",
          "items": {
            "$ref": "Collection"
          }
        },
        "next_link": {
          "type": "string",
          "description": "A link to the next page of Collections."
        },
        "next_page_token": {
          "type": "string",
          "description": "The page token for the next page of Collections."
        },
        "selfLink": {
          "type": "string",
          "description": "A link back to this list."
        }
      }
    },
    "Collection": {
      "id": "Collection",
      "description": "Arvados Collection.",
      "type": "object",
      "uuidPrefix": "4zz18",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "owner_uuid": {
          "type": "string"
        },
        "created_at": {
          "type": "datetime"
        },
        "modified_by_user_uuid": {
          "type": "string"
        },
        "modified_at": {
          "type": "datetime"
        },
        "portable_data_hash": {
          "type": "string"
        },
        "replication_desired": {
          "type": "integer"
        },
        "replication_confirmed_at": {
          "type": "datetime"
        },
        "replication_confirmed": {
          "type": "integer"
        },
        "uuid": {
          "type": "string",
          "description": "This object's Arvados UUID, like `zzzzz-4zz18-12345abcde67890`."
        },
        "manifest_text": {
          "type": "text"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "properties": {
          "type": "Hash"
        },
        "delete_at": {
          "type": "datetime"
        },
        "trash_at": {
          "type": "datetime"
        },
        "is_trashed": {
          "type": "boolean"
        },
        "storage_classes_desired": {
          "type": "Array"
        },
        "storage_classes_confirmed": {
          "type": "Array"
        },
        "storage_classes_confirmed_at": {
          "type": "datetime"
        },
        "current_version_uuid": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "preserve_version": {
          "type": "boolean"
        },
        "file_count": {
          "type": "integer"
        },
        "file_size_total": {
          "type": "integer"
        }
      }
    },
    "ComputedPermissionList": {
      "id": "ComputedPermissionList",
      "description": "A list of ComputedPermission objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#computedPermissionList.",
          "default": "arvados#computedPermissionList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching ComputedPermission objects.",
          "items": {
            "$ref": "ComputedPermission"
          }
        },
        "next_link": {
          "type": "string",
          "description": "A link to the next page of ComputedPermissions."
        },
        "next_page_token": {
          "type": "string",
          "description": "The page token for the next page of ComputedPermissions."
        },
        "selfLink": {
          "type": "string",
          "description": "A link back to this list."
        }
      }
    },
    "ComputedPermission": {
      "id": "ComputedPermission",
      "description": "Arvados Computed permission.",
      "type": "object",
      "properties": {
        "user_uuid": {
          "type": "string"
        },
        "target_uuid": {
          "type": "string"
        },
        "perm_level": {
          "type": "integer"
        }
      }
    },
    "ContainerList": {
      "id": "ContainerList",
      "description": "A list of Container objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#containerList.",
          "default": "arvados#containerList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching Container objects.",
          "items": {
            "$ref": "Container"
          }
        },
        "next_link": {
          "type": "string",
          "description": "A link to the next page of Containers."
        },
        "next_page_token": {
          "type": "string",
          "description": "The page token for the next page of Containers."
        },
        "selfLink": {
          "type": "string",
          "description": "A link back to this list."
        }
      }
    },
    "Container": {
      "id": "Container",
      "description": "Arvados Container.",
      "type": "object",
      "uuidPrefix": "dz642",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "uuid": {
          "type": "string",
          "description": "This object's Arvados UUID, like `zzzzz-dz642-12345abcde67890`."
        },
        "owner_uuid": {
          "type": "string"
        },
        "created_at": {
          "type": "datetime"
        },
        "modified_at": {
          "type": "datetime"
        },
        "modified_by_user_uuid": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "started_at": {
          "type": "datetime"
        },
        "finished_at": {
          "type": "datetime"
        },
        "log": {
          "type": "string"
        },
        "environment": {
          "type": "Hash"
        },
        "cwd": {
          "type": "string"
        },
        "command": {
          "type": "Array"
        },
        "output_path": {
          "type": "string"
        },
        "mounts": {
          "type": "Hash"
        },
        "runtime_constraints": {
          "type": "Hash"
        },
        "output": {
          "type": "string"
        },
        "container_image": {
          "type": "string"
        },
        "progress": {
          "type": "float"
        },
        "priority": {
          "type": "integer"
        },
        "exit_code": {
          "type": "integer"
        },
        "auth_uuid": {
          "type": "string"
        },
        "locked_by_uuid": {
          "type": "string"
        },
        "scheduling_parameters": {
          "type": "Hash"
        },
        "runtime_status": {
          "type": "Hash"
        },
        "runtime_user_uuid": {
          "type": "text"
        },
        "runtime_auth_scopes": {
          "type": "Array"
        },
        "lock_count": {
          "type": "integer"
        },
        "gateway_address": {
          "type": "string"
        },
        "interactive_session_started": {
          "type": "boolean"
        },
        "output_storage_classes": {
          "type": "Array"
        },
        "output_properties": {
          "type": "Hash"
        },
        "cost": {
          "type": "float"
        },
        "subrequests_cost": {
          "type": "float"
        },
        "output_glob": {
          "type": "Array"
        }
      }
    },
    "ContainerRequestList": {
      "id": "ContainerRequestList",
      "description": "A list of ContainerRequest objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#containerRequestList.",
          "default": "arvados#containerRequestList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching ContainerRequest objects.",
          "items": {
            "$ref": "ContainerRequest"
          }
        },
        "next_link": {
          "type": "string",
          "description": "A link to the next page of ContainerRequests."
        },
        "next_page_token": {
          "type": "string",
          "description": "The page token for the next page of ContainerRequests."
        },
        "selfLink": {
          "type": "string",
          "description": "A link back to this list."
        }
      }
    },
    "ContainerRequest": {
      "id": "ContainerRequest",
      "description": "Arvados Container request.",
      "type": "object",
      "uuidPrefix": "xvhdp",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "uuid": {
          "type": "string",
          "description": "This object's Arvados UUID, like `zzzzz-xvhdp-12345abcde67890`."
        },
        "owner_uuid": {
          "type": "string"
        },
        "created_at": {
          "type": "datetime"
        },
        "modified_at": {
          "type": "datetime"
        },
        "modified_by_user_uuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "text"
        },
        "properties": {
          "type": "Hash"
        },
        "state": {
          "type": "string"
        },
        "requesting_container_uuid": {
          "type": "string"
        },
        "container_uuid": {
          "type": "string"
        },
        "container_count_max": {
          "type": "integer"
        },
        "mounts": {
          "type": "Hash"
        },
        "runtime_constraints": {
          "type": "Hash"
        },
        "container_image": {
          "type": "string"
        },
        "environment": {
          "type": "Hash"
        },
        "cwd": {
          "type": "string"
        },
        "command": {
          "type": "Array"
        },
        "output_path": {
          "type": "string"
        },
        "priority": {
          "type": "integer"
        },
        "expires_at": {
          "type": "datetime"
        },
        "filters": {
          "type": "text"
        },
        "container_count": {
          "type": "integer"
        },
        "use_existing": {
          "type": "boolean"
        },
        "scheduling_parameters": {
          "type": "Hash"
        },
        "output_uuid": {
          "type": "string"
        },
        "log_uuid": {
          "type": "string"
        },
        "output_name": {
          "type": "string"
        },
        "output_ttl": {
          "type": "integer"
        },
        "output_storage_classes": {
          "type": "Array"
        },
        "output_properties": {
          "type": "Hash"
        },
        "cumulative_cost": {
          "type": "float"
        },
        "output_glob": {
          "type": "Array"
        }
      }
    },
    "GroupList": {
      "id": "GroupList",
      "description": "A list of Group objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#groupList.",
          "default": "arvados#groupList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching Group objects.",
          "items": {
            "$ref": "Group"
          }
        },
        "next_link": {
          "type": "string",
          "description": "A link to the next page of Groups."
        },
        "next_page_token": {
          "type": "string",
          "description": "The page token for the next page of Groups."
        },
        "selfLink": {
          "type": "string",
          "description": "A link back to this list."
        }
      }
    },
    "Group": {
      "id": "Group",
      "description": "Arvados Group.",
      "type": "object",
      "uuidPrefix": "j7d0g",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "uuid": {
          "type": "string",
          "description": "This object's Arvados UUID, like `zzzzz-j7d0g-12345abcde67890`."
        },
        "owner_uuid": {
          "type": "string"
        },
        "created_at": {
          "type": "datetime"
        },
        "modified_by_user_uuid": {
          "type": "string"
        },
        "modified_at": {
          "type": "datetime"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "group_class": {
          "type": "string"
        },
        "trash_at": {
          "type": "datetime"
        },
        "is_trashed": {
          "type": "boolean"
        },
        "delete_at": {
          "type": "datetime"
        },
        "properties": {
          "type": "Hash"
        },
        "frozen_by_uuid": {
          "type": "string"
        }
      }
    },
    "KeepServiceList": {
      "id": "KeepServiceList",
      "description": "A list of KeepService objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#keepServiceList.",
          "default": "arvados#keepServiceList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching KeepService objects.",
          "items": {
            "$ref": "KeepService"
          }
        },
        "next_link": {
          "type": "string",
          "description": "A link to the next page of KeepServices."
        },
        "next_page_token": {
          "type": "string",
          "description": "The page token for the next page of KeepServices."
        },
        "selfLink": {
          "type": "string",
          "description": "A link back to this list."
        }
      }
    },
    "KeepService": {
      "id": "KeepService",
      "description": "Arvados Keep service.",
      "type": "object",
      "uuidPrefix": "bi6l4",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "uuid": {
          "type": "string",
          "description": "This object's Arvados UUID, like `zzzzz-bi6l4-12345abcde67890`."
        },
        "owner_uuid": {
          "type": "string"
        },
        "modified_by_user_uuid": {
          "type": "string"
        },
        "modified_at": {
          "type": "datetime"
        },
        "service_host": {
          "type": "string"
        },
        "service_port": {
          "type": "integer"
        },
        "service_ssl_flag": {
          "type": "boolean"
        },
        "service_type": {
          "type": "string"
        },
        "created_at": {
          "type": "datetime"
        },
        "read_only": {
          "type": "boolean"
        }
      }
    },
    "LinkList": {
      "id": "LinkList",
      "description": "A list of Link objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#linkList.",
          "default": "arvados#linkList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching Link objects.",
          "items": {
            "$ref": "Link"
          }
        },
        "next_link": {
          "type": "string",
          "description": "A link to the next page of Links."
        },
        "next_page_token": {
          "type": "string",
          "description": "The page token for the next page of Links."
        },
        "selfLink": {
          "type": "string",
          "description": "A link back to this list."
        }
      }
    },
    "Link": {
      "id": "Link",
      "description": "Arvados Link.",
      "type": "object",
      "uuidPrefix": "o0j2j",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "uuid": {
          "type": "string",
          "description": "This object's Arvados UUID, like `zzzzz-o0j2j-12345abcde67890`."
        },
        "owner_uuid": {
          "type": "string"
        },
        "created_at": {
          "type": "datetime"
        },
        "modified_by_user_uuid": {
          "type": "string"
        },
        "modified_at": {
          "type": "datetime"
        },
        "tail_uuid": {
          "type": "string"
        },
        "link_class": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "head_uuid": {
          "type": "string"
        },
        "properties": {
          "type": "Hash"
        }
      }
    },
    "LogList": {
      "id": "LogList",
      "description": "A list of Log objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#logList.",
          "default": "arvados#logList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching Log objects.",
          "items": {
            "$ref": "Log"
          }
        },
        "next_link": {
          "type": "string",
          "description": "A link to the next page of Logs."
        },
        "next_page_token": {
          "type": "string",
          "description": "The page token for the next page of Logs."
        },
        "selfLink": {
          "type": "string",
          "description": "A link back to this list."
        }
      }
    },
    "Log": {
      "id": "Log",
      "description": "Arvados Log.",
      "type": "object",
      "uuidPrefix": "57u5n",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "id": {
          "type": "integer"
        },
        "uuid": {
          "type": "string",
          "description": "This object's Arvados UUID, like `zzzzz-57u5n-12345abcde67890`."
        },
        "owner_uuid": {
          "type": "string"
        },
        "modified_by_user_uuid": {
          "type": "string"
        },
        "object_uuid": {
          "type": "string"
        },
        "event_at": {
          "type": "datetime"
        },
        "event_type": {
          "type": "string"
        },
        "summary": {
          "type": "text"
        },
        "properties": {
          "type": "Hash"
        },
        "created_at": {
          "type": "datetime"
        },
        "modified_at": {
          "type": "datetime"
        },
        "object_owner_uuid": {
          "type": "string"
        }
      }
    },
    "UserList": {
      "id": "UserList",
      "description": "A list of User objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#userList.",
          "default": "arvados#userList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching User objects.",
          "items": {
            "$ref": "User"
          }
        },
        "next_link": {
          "type": "string",
          "description": "A link to the next page of Users."
        },
        "next_page_token": {
          "type": "string",
          "description": "The page token for the next page of Users."
        },
        "selfLink": {
          "type": "string",
          "description": "A link back to this list."
        }
      }
    },
    "User": {
      "id": "User",
      "description": "Arvados User.",
      "type": "object",
      "uuidPrefix": "tpzed",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "uuid": {
          "type": "string",
          "description": "This object's Arvados UUID, like `zzzzz-tpzed-12345abcde67890`."
        },
        "owner_uuid": {
          "type": "string"
        },
        "created_at": {
          "type": "datetime"
        },
        "modified_by_user_uuid": {
          "type": "string"
        },
        "modified_at": {
          "type": "datetime"
        },
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "identity_url": {
          "type": "string"
        },
        "is_admin": {
          "type": "boolean"
        },
        "prefs": {
          "type": "Hash"
        },
        "is_active": {
          "type": "boolean"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "UserAgreementList": {
      "id": "UserAgreementList",
      "description": "A list of UserAgreement objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#userAgreementList.",
          "default": "arvados#userAgreementList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching UserAgreement objects.",
          "items": {
            "$ref": "UserAgreement"
          }
        },
        "next_link": {
          "type": "string",
          "description": "A link to the next page of UserAgreements."
        },
        "next_page_token": {
          "type": "string",
          "description": "The page token for the next page of UserAgreements."
        },
        "selfLink": {
          "type": "string",
          "description": "A link back to this list."
        }
      }
    },
    "UserAgreement": {
      "id": "UserAgreement",
      "description": "Arvados User agreement.",
      "type": "object",
      "uuidPrefix": "gv0sa",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "owner_uuid": {
          "type": "string"
        },
        "created_at": {
          "type": "datetime"
        },
        "modified_by_user_uuid": {
          "type": "string"
        },
        "modified_at": {
          "type": "datetime"
        },
        "portable_data_hash": {
          "type": "string"
        },
        "replication_desired": {
          "type": "integer"
        },
        "replication_confirmed_at": {
          "type": "datetime"
        },
        "replication_confirmed": {
          "type": "integer"
        },
        "uuid": {
          "type": "string",
          "description": "This object's Arvados UUID, like `zzzzz-gv0sa-12345abcde67890`."
        },
        "manifest_text": {
          "type": "text"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "properties": {
          "type": "Hash"
        },
        "delete_at": {
          "type": "datetime"
        },
        "trash_at": {
          "type": "datetime"
        },
        "is_trashed": {
          "type": "boolean"
        },
        "storage_classes_desired": {
          "type": "Array"
        },
        "storage_classes_confirmed": {
          "type": "Array"
        },
        "storage_classes_confirmed_at": {
          "type": "datetime"
        },
        "current_version_uuid": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "preserve_version": {
          "type": "boolean"
        },
        "file_count": {
          "type": "integer"
        },
        "file_size_total": {
          "type": "integer"
        }
      }
    },
    "VirtualMachineList": {
      "id": "VirtualMachineList",
      "description": "A list of VirtualMachine objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#virtualMachineList.",
          "default": "arvados#virtualMachineList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching VirtualMachine objects.",
          "items": {
            "$ref": "VirtualMachine"
          }
        },
        "next_link": {
          "type": "string",
          "description": "A link to the next page of VirtualMachines."
        },
        "next_page_token": {
          "type": "string",
          "description": "The page token for the next page of VirtualMachines."
        },
        "selfLink": {
          "type": "string",
          "description": "A link back to this list."
        }
      }
    },
    "VirtualMachine": {
      "id": "VirtualMachine",
      "description": "Arvados Virtual machine.",
      "type": "object",
      "uuidPrefix": "2x53u",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "uuid": {
          "type": "string",
          "description": "This object's Arvados UUID, like `zzzzz-2x53u-12345abcde67890`."
        },
        "owner_uuid": {
          "type": "string"
        },
        "modified_by_user_uuid": {
          "type": "string"
        },
        "modified_at": {
          "type": "datetime"
        },
        "hostname": {
          "type": "string"
        },
        "created_at": {
          "type": "datetime"
        }
      }
    },
    "WorkflowList": {
      "id": "WorkflowList",
      "description": "A list of Workflow objects.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Object type. Always arvados#workflowList.",
          "default": "arvados#workflowList"
        },
        "etag": {
          "type": "string",
          "description": "List cache version."
        },
        "items": {
          "type": "array",
          "description": "An array of matching Workflow objects.",
          "items": {
            "$ref": "Workflow"
          }
        },
        "next_link": {
          "type": "string",
          "description": "A link to the next page of Workflows."
        },
        "next_page_token": {
          "type": "string",
          "description": "The page token for the next page of Workflows."
        },
        "selfLink": {
          "type": "string",
          "description": "A link back to this list."
        }
      }
    },
    "Workflow": {
      "id": "Workflow",
      "description": "Arvados Workflow.",
      "type": "object",
      "uuidPrefix": "7fd4e",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Object cache version."
        },
        "uuid": {
          "type": "string",
          "description": "This object's Arvados UUID, like `zzzzz-7fd4e-12345abcde67890`."
        },
        "owner_uuid": {
          "type": "string"
        },
        "created_at": {
          "type": "datetime"
        },
        "modified_at": {
          "type": "datetime"
        },
        "modified_by_user_uuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "text"
        },
        "definition": {
          "type": "text"
        }
      }
    }
  },
  "servicePath": "arvados/v1/",
  "title": "Arvados API",
  "version": "v1"
}